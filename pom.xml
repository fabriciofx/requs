<?xml version="1.0"?>
<!--
 *
 * RQDQL.com
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt. It is also available
 * through the world-wide-web at this URL: http://www.rqdql.com/LICENSE.txt
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@rqdql.com so we can send you a copy immediately.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 *
 * Copyright (c) 2010, rqdql.com, Inc.
 * @version $Id$
 -->
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.rqdql</groupId>
    <artifactId>rqdql</artifactId>
    <version>2.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Requirements Definition and Query Language (RQDQL)</name>

    <description>
        Requirements manipulation language
    </description>
    <url>http://www.rqdql.com</url>
    <inceptionYear>2009</inceptionYear>

    <organization>
        <name>RQDQL.com</name>
        <url>http://www.rqdql.com</url>
    </organization>

    <licenses>
        <license>
            <name>BSD</name>
            <url>http://www.rqdql.com/LICENSE.txt</url>
            <distribution>repo</distribution>
            <comments>This is free open source project, feel free to redistribute it</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>1</id>
            <name>Yegor Bugayenko</name>
            <email>yegor@rqdql.com</email>
            <organization>REMPL.com</organization>
            <organizationUrl>http://www.rqdql.com</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <mailingLists>
        <mailingList>
            <name>RQDQL Discussions</name>
            <subscribe>rqdql@googlegroups.com</subscribe>
            <unsubscribe>rqdql@googlegroups.com</unsubscribe>
            <post>rqdql@googlegroups.com</post>
            <archive>http://groups.google.com/group/rqdql</archive>
        </mailingList>
    </mailingLists>

    <issueManagement>
        <system>Trac 0.12</system>
        <url>http://trac.fazend.com/rqdql</url>
    </issueManagement>

    <ciManagement>
        <system>hudson</system>
        <url>http://hudson.fazend.com:8081/hudson/job/rqdql</url>
    </ciManagement>

    <scm>
        <connection>scm:svn:svn://svn.fazend.com/rqdql/trunk/rqdql</connection>
        <developerConnection>scm:svn:svn://svn.fazend.com/rqdql/trunk/rqdql</developerConnection>
        <url>svn://svn.fazend.com/rqdql/trunk/rqdql</url>
    </scm>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>sonatype-nexus-staging</id>
            <name>Sonatype OSS Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype OSS Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <site>
            <id>www.rqdql.com</id>
            <name>RQDQL.com Project Site</name>
            <url>${site.deploy.url}</url>
        </site>
    </distributionManagement>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.6</jdk.version>
    </properties>

    <repositories>
        <!-- intentionally empty -->
    </repositories>

    <pluginRepositories>
        <!-- intentionally empty -->
    </pluginRepositories>

    <profiles>
        <profile>
            <!--
            This profile activates all strict static code analysis validation
            procedures, mandatory for continuous integration. To activate
            this profile run: "mvn -Pci"
            -->
            <id>ci</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!--
                            This is an extra validation mechanism, that enforces
                            explicit version numbering across the POM.XML file.
                            It's important to work this way, because sudden
                            version changing may lead to broken builds.
                            -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-enforcer-plugin</artifactId>
                            <version>1.0-beta-1</version>
                        </plugin>
                        <plugin>
                            <!--
                            API documentation builder. It will produce documentation
                            which is then to be used in site:site. It will be
                            located at target/site/apidocs.
                            -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.7</version>  <!-- 12 October 2010 -->
                            <configuration>
                                <failOnError>true</failOnError>
                                <quiet>true</quiet>
                                <tags>
                                    <!--
                                    Here we instruct plugin to use custom tag
                                    @link http://maven.apache.org/plugins/maven-javadoc-plugin/examples/tag-configuration.html
                                    -->
                                    <tag>
                                        <name>todo</name>
                                        <placement>a</placement>
                                        <head>To do:</head>
                                    </tag>
                                </tags>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            Coding styling validator. Configuration is inside resources/checkstyle
                            directory. When you edit that file don't forget to install
                            the build-tool project first, and then run this project.
                            -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>2.6</version> <!-- 14 October 2010 -->
                            <configuration>
                                <failOnViolation>true</failOnViolation>
                                <failsOnError>true</failsOnError>
                                <consoleOutput>true</consoleOutput>
                                <logViolationsToConsole>true</logViolationsToConsole>
                                <violationSeverity>info</violationSeverity>
                                <configLocation>${project.basedir}/src/test/maven/checkstyle/checks.xml</configLocation>
                                <headerLocation>${project.basedir}/src/test/maven/checkstyle/LICENSE.txt</headerLocation>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            Project Mess Detector, finds coding errors and reports them. In
                            CI environment it should stop the build if some errors are
                            found.
                            -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>2.5</version> <!-- 2 Nov 2010 -->
                            <configuration>
                                <failOnViolation>true</failOnViolation>
                                <targetJdk>${jdk.version}</targetJdk>
                                <aggregate>true</aggregate>
                                <verbose>true</verbose>
                                <linkXRef>false</linkXRef>
                                <rulesets>
                                    <ruleset>${project.basedir}/src/test/maven/pmd/ruleset.xml</ruleset>
                                </rulesets>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            Static code analysis to find potential bugs in code. One
                            major drawback in this plugin is that it DOES'T produce
                            any report to the output, only to XML files
                            -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>findbugs-maven-plugin</artifactId>
                            <version>2.3.2-SNAPSHOT</version> <!-- 6 Nov 2010 -->
                            <configuration>
                                <threshold>Exp</threshold> <!-- as much to show as possible -->
                                <!--
                                We never fail on error here, instead we let
                                our Groovy code to fail later, after parsing of
                                all errors
                                -->
                                <failOnError>false</failOnError>
                                <xmlOutput>true</xmlOutput>
                                <excludeFilterFile>${project.basedir}/src/test/maven/findbugs/exclude.xml</excludeFilterFile>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            To enable on-fly script executions.
                            @link http://docs.codehaus.org/display/GMAVEN/Executing+Groovy+Code
                            -->
                            <groupId>org.codehaus.gmaven</groupId>
                            <artifactId>gmaven-plugin</artifactId>
                            <version>1.3</version> <!-- 23 Nov 2010 -->
                        </plugin>
                        <plugin>
                            <!--
                            This is a code coverage validator, executed AFTER
                            all unit tests are passed. Cobertura starts all tests
                            again in order to calculate code coverage, and validates
                            that this coverage is in the allowed interval.
                            -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>2.4</version> <!-- 2 Nov 2010 -->
                            <configuration>
                                <!--
                                This option doesn't work with cobertura 2.4, but is
                                going to be implemented in 2.5
                                @link http://jira.codehaus.org/browse/MCOBERTURA-75
                                -->
                                <quiet>false</quiet>
                                <instrumentation>
                                    <excludes>
                                        <!-- auto-generated classes for i18n -->
                                        <exclude>com/rqdql/gettext/*</exclude>
                                        <!-- CLI class, which is never instantiated -->
                                        <exclude>com/rqdql/cli/Main.class</exclude>
                                    </excludes>
                                </instrumentation>
                                <check>
                                    <haltOnFailure>true</haltOnFailure>
                                    <lineRate>60</lineRate>
                                    <branchRate>60</branchRate>
                                    <packageLineRate>70</packageLineRate>
                                    <packageBranchRate>70</packageBranchRate>
                                    <totalLineRate>80</totalLineRate>
                                    <totalBranchRate>80</totalBranchRate>
                                </check>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            This plugin will collect current build number
                            from Subversion and save it into MANIFEST.MF. Later,
                            this number is used by different java classes, mostly
                            in order to expose it in web.
                            -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>buildnumber-maven-plugin</artifactId>
                            <version>1.0-beta-4</version>
                            <configuration>
                                <doCheck>false</doCheck>
                                <doUpdate>false</doUpdate>
                                <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>cpd-check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <id>findbugs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <xml>${project.build.directory}/findbugsXml.xml</xml>
                                        <failOnError>true</failOnError>
                                    </properties>
                                    <!--
                                    @link http://docs.codehaus.org/display/GMAVEN/Executing+Groovy+Code
                                    @link http://groovy.codehaus.org./Reading+XML+using+Groovy%27s+XmlParser
                                    -->
                                    <source>
                                        def file = new File(project.properties['xml'])
                                        if (!file.exists()) {
                                            log.info("No XML report, nothing to parse")
                                            return
                                        }
                                        def xml = new XmlParser().parse(file)
                                        def bugs = xml.BugInstance
                                        def total = bugs.size()
                                        if (total &gt; 0) {
                                            log.info("Total bugs: " + total)
                                            for (i in 0..total-1) {
                                                def bug = bugs[i]
                                                log.info(
                                                    bug.LongMessage.text()
                                                    + " " + bug.Class.'@classname'
                                                    + " " + bug.Class.SourceLine.Message.text()
                                                )
                                            }
                                            if (project.properties['failOnError']) {
                                                fail(total + " FindBugs error(s)")
                                            }
                                        }
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <!-- version is specified in pluginManagement -->
                        <executions>
                            <execution>
                                <id>enforce-it</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>3.0</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>${jdk.version}</version>
                                        </requireJavaVersion>
                                        <requireOS>
                                            <family>unix</family>
                                        </requireOS>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
		<dependency>
		    <!--
		    XOM is used as an alternative to classical Java XML
		    manipulation library, which is difficult to use and
		    very verbose. Other options considered: DOM4J, JDOM.
		    @see http://stackoverflow.com/questions/831865
		    @see http://www.xom.nu
		    -->
			<groupId>xom</groupId>
			<artifactId>xom</artifactId>
			<version>1.2.5</version> <!-- 13 Oct 2010 -->
		</dependency>
        <dependency>
            <!--
            Since every framework uses its own logging mechanism
            this SLF4J is going to help to control everything from
            one point.
            -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version> <!-- 8 Nov 2010 -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version> <!-- 8 Nov 2010 -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.6.1</version> <!-- 8 Nov 2010 -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <!--
            Main logging facility. All other packages shall
            be forwarded to LOG4J through SLF4J
            -->
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version> <!-- 5 Nov 2010 -->
        </dependency>
        <dependency>
            <!--
            This library simplifies string operations. This is
            org.apache.commons.lang.*.
            -->
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version> <!-- 15 Oct 2010 -->
        </dependency>
        <dependency>
            <!--
            This library simplifies file-management operations.
            -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version> <!-- 9 Oct 2010 -->
        </dependency>
		<dependency>
		    <!--
		    We are using JUnit framework for unit test organization
		    and management. This framework is the most stable and mature
		    in the market. Other options considered: TestNG.
		    @link http://www.junit.org/
		    -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version> <!-- 10 Sep 2010 -->
			<scope>test</scope>
		</dependency>
        <dependency>
            <!--
            Mockito is used as a mocking library during testing.
            Other options: jMock.
            @link http://www.mockito.org/
            -->
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.5</version> <!-- 9 Oct 2010 -->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <!--
            To enable site deployment by FTP
            @link http://maven.apache.org/wagon/wagon-providers/wagon-ftp/
            -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>1.0-beta-7</version> <!-- 18 Dec 2010 -->
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.2</version> <!-- 7 Nov 2010 -->
                    <configuration>
                        <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                        <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.1</version> <!-- 2 Dec 2010 -->
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <SCM-Revision>${buildNumber}</SCM-Revision>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                </plugin>
                <plugin>
                    <!--
                    Starts unit tests, protocols their results and creates
                    a summary report. It is required to send testing protocol
                    to the STDOUT as well, not only to the file.
                    -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.5</version> <!-- 1 Oct 2010 -->
                    <configuration>
                        <useFile>false</useFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version> <!-- 27 Oct 2010 -->
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    This plugin helps to manage releases and new versions
                    of the product.
                    @link http://maven.apache.org/plugins/maven-release-plugin/usage.html
                    -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                        <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>1.0-beta-3-SNAPSHOT</version>
                    <configuration>
                        <validationSets>
                            <validationSet>
                                <dir>src/main/resources</dir>
                                <validating>true</validating>
                                <includes>
                                    <include>.xml</include>
                                </includes>
                            </validationSet>
                        </validationSets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.0-beta-2</version> <!-- 4 Nov 2010 -->
                    <configuration>
                        <reportPlugins>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-project-info-reports-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                                <reports>
                                    <report>cim</report>
                                    <report>dependencies</report>
                                    <report>issue-tracking</report>
                                    <report>license</report>
                                    <report>mailing-list</report>
                                    <report>plugins</report>
                                    <report>project-team</report>
                                    <report>scm</report>
                                    <report>summary</report>
                                </reports>
                            </plugin>
                            <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>taglist-maven-plugin</artifactId>
                                <version>2.4</version> <!-- 15 Nov 2010 -->
                                <configuration>
                                    <tagListOptions>
                                        <tagClasses>
                                            <tagClass>
                                                <displayName>ToDo</displayName>
                                                <tags>
                                                    <tag>
                                                        <matchString>@todo</matchString>
                                                        <matchType>exact</matchType>
                                                    </tag>
                                                </tags>
                                            </tagClass>
                                        </tagClasses>
                                    </tagListOptions>
                                </configuration>
                            </plugin>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-javadoc-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                                <configuration>
                                    <stylesheetfile>src/test/maven/javadoc/screen.css</stylesheetfile>
                                    <tags>
                                        <tag>
                                            <name>todo</name>
                                            <placement>a</placement>
                                            <head>To do:</head>
                                        </tag>
                                    </tags>
                                    <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                                    <docletArtifact>
                                        <groupId>org.umlgraph</groupId>
                                        <artifactId>doclet</artifactId>
                                        <version>5.1</version>
                                    </docletArtifact>
                                    <additionalparam>
                                        -views
                                        -all
                                    </additionalparam>
                                    <useStandardDocletOptions>true</useStandardDocletOptions>
                                </configuration>
                            </plugin>
                            <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>findbugs-maven-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                            </plugin>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-checkstyle-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                                <configuration>
                                    <configLocation>src/test/maven/checkstyle/checks.xml</configLocation>
                                    <headerLocation>src/test/maven/checkstyle/LICENSE.txt</headerLocation>
                                </configuration>
                            </plugin>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-pmd-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                                <configuration>
                                    <targetJdk>${jdk.version}</targetJdk>
                                    <linkXRef>false</linkXRef>
                                    <rulesets>
                                        <ruleset>src/test/maven/pmd/ruleset.xml</ruleset>
                                    </rulesets>
                                </configuration>
                            </plugin>
                            <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>cobertura-maven-plugin</artifactId>
                                <!-- version is specified in pluginManagement -->
                            </plugin>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-jxr-plugin</artifactId>
                                <version>2.2</version>
                            </plugin>
                            <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>jdepend-maven-plugin</artifactId>
                                <version>2.0-beta-2</version> <!-- 7 Nov 2010 -->
                            </plugin>
                        </reportPlugins>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    Process LaTeX documentation in order to produce PDF
                    @see http://mojo.codehaus.org/latex-maven-plugin
                    -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>latex-maven-plugin</artifactId>
                    <version>1.0</version> <!-- 24 Dec 2010 -->
                    <configuration>
                        <buildDir>${project.build.directory}/site/pdf</buildDir>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    To GPG-sign the artifact before deployment to foreign
                    repository
                    -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.1</version> <!-- 21 Dec 2010 -->
                </plugin>
                <plugin>
                    <!--
                    To assemble the project into one executable standalone JAR
                    -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.2</version> <!-- 19 Dec 2010 -->
                    <configuration>
                        <tarLongFileMode>gnu</tarLongFileMode>
                        <appendAssemblyId>true</appendAssemblyId>
                        <archive>
                            <manifest>
                                <mainClass>com.rqdql.cli.Main</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--
            Configuration details of all plugins you will
            find in <pluginManagement> section above
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <!-- version is specified in pluginManagement -->
                <executions>
                    <execution>
                        <id>attach-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>latex-maven-plugin</artifactId>
                <!-- version is specified in pluginManagement section -->
                <executions>
                    <execution>
                        <id>latex-documents</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>latex</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- version is specified in pluginManagement section -->
                <executions>
                    <execution>
                        <id>executable-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/bin.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
