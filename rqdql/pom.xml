<?xml version="1.0"?>
<!--
 * Copyright (c) 2009-2011, RQDQL.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met: 1) Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer. 2) Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution. 3) Neither the name of the RQDQL.com nor
 * the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Copyright (c) 2009-2011, RQDQL.com.
 * @version $Id$
 -->
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.rqdql</groupId>
    <artifactId>rqdql</artifactId>
    <version>2.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>rqdql</name>

    <modules>
        <module>rqdql-tk</module>
        <module>rqdql-commons</module>
        <module>rqdql-scanner</module>
        <module>rqdql-solm</module>
        <module>rqdql-thesaurus</module>
        <module>rqdql-cli</module>
        <module>rqdql-plugins</module>
        <module>rqdql-reporter</module>
    </modules>

    <description>
        <![CDATA[
        Requirements Definition and Query Language (RQDQL).
        ]]>
    </description>
    <url>http://www.rqdql.com</url>
    <inceptionYear>2009</inceptionYear>

    <organization>
        <name>RQDQL.com</name>
        <url>http://www.rqdql.com</url>
    </organization>

    <licenses>
        <license>
            <name>BSD</name>
            <url>http://www.rqdql.com/LICENSE.txt</url>
            <distribution>repo</distribution>
            <comments>
                <![CDATA[
                This is free open source project, feel free to redistribute it
                ]]>
            </comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>1</id>
            <name>Yegor Bugayenko</name>
            <email>yegor@rqdql.com</email>
            <organization>REMPL.com</organization>
            <organizationUrl>http://www.rqdql.com</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <mailingLists>
        <mailingList>
            <name>RQDQL Discussions</name>
            <subscribe>rqdql@googlegroups.com</subscribe>
            <unsubscribe>rqdql@googlegroups.com</unsubscribe>
            <post>rqdql@googlegroups.com</post>
            <archive>http://groups.google.com/group/rqdql</archive>
        </mailingList>
    </mailingLists>

    <issueManagement>
        <system>Trac 0.12</system>
        <url>http://trac.fazend.com/rqdql</url>
    </issueManagement>

    <ciManagement>
        <system>hudson</system>
        <url>http://hudson.fazend.com:8081/hudson/job/rqdql</url>
    </ciManagement>

    <scm>
        <connection>scm:svn:http://svn.fazend.com/rqdql/trunk/rqdql</connection>
        <developerConnection>scm:svn:http://svn.fazend.com/rqdql/trunk/rqdql</developerConnection>
        <url>http://svn.fazend.com/rqdql/trunk/rqdql</url>
    </scm>

    <distributionManagement>
        <downloadUrl>https://oss.sonatype.org/content/groups/public</downloadUrl>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>sonatype-nexus-staging</id>
            <name>Sonatype OSS Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype OSS Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <site>
            <id>www.rqdql.com</id>
            <name>RQDQL.com Project Site</name>
            <url>${site.deploy.url}</url>
        </site>
    </distributionManagement>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.6</jdk.version>
    </properties>

    <repositories>
        <!-- intentionally empty -->
    </repositories>

    <pluginRepositories>
        <!-- intentionally empty -->
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!--
                ANTLR3 Parser/Lexer
                @link http://www.antlr.org/
                -->
                <groupId>org.antlr</groupId>
                <artifactId>antlr-runtime</artifactId>
                <version>3.3</version>
            </dependency>
            <dependency>
                <!--
                This library simplifies string operations. This is
                org.apache.commons.lang.*.
                -->
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.5</version> <!-- 15 Oct 2010 -->
            </dependency>
            <dependency>
                <!--
                This library simplifies file-management operations.
                -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>1.3.2</version> <!-- 9 Oct 2010 -->
            </dependency>
            <dependency>
                <!--
                We are using JUnit framework for unit test organization
                and management. This framework is the most stable and mature
                in the market. Other options considered: TestNG.
                @link http://www.junit.org/
                -->
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.7</version> <!-- 10 Sep 2010 -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--
                Assertions and matchers for unit tests.
                @link http://code.google.com/p/hamcrest/wiki/Tutorial
                -->
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.1</version> <!-- 6 Apr 2011 -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--
                Mockito is used as a mocking library during testing.
                Other options: jMock.
                @link http://www.mockito.org/
                -->
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.8.5</version> <!-- 9 Oct 2010 -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--
                XOM is used as an alternative to classical Java XML
                manipulation library, which is difficult to use and
                very verbose. Other options considered: DOM4J, JDOM.
                @see http://stackoverflow.com/questions/831865
                @see http://www.xom.nu
                -->
                <groupId>xom</groupId>
                <artifactId>xom</artifactId>
                <version>1.2.5</version> <!-- 13 Oct 2010 -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.rqdql</groupId>
                <artifactId>rqdql-tk</artifactId>
                <version>2.0-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <!--
            This profile activates all continuous integration specific
            plugins, not necessary in development. To activate
            this profile run: "mvn -Dci"
            -->
            <id>for-production</id>
            <activation>
                <property><name>ci</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!--
                        This is an extra validation mechanism, that enforces
                        explicit version numbering across the POM.XML file.
                        It's important to work this way, because sudden
                        version changing may lead to broken builds.
                        -->
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.0-beta-1</version>
                        <executions>
                            <execution>
                                <id>enforce-it</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>3.0</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>${jdk.version}</version>
                                        </requireJavaVersion>
                                        <requireOS>
                                            <family>unix</family>
                                        </requireOS>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                        This plugin will collect current build number
                        from Subversion and save it into MANIFEST.MF. Later,
                        this number is used by different java classes, mostly
                        in order to expose it in web.
                        -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.0-beta-4</version>
                        <configuration>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
            This profile activates all strict static code analysis validation
            procedures, mandatory for continuous integration. To activate
            this profile run: "mvn -Dci"
            -->
            <id>static-analysis</id>
            <activation>
                <property><name>ci</name></property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!--
                            API documentation builder. It will produce documentation
                            which is then to be used in site:site. It will be
                            located at target/site/apidocs.
                            -->
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.7</version>  <!-- 12 October 2010 -->
                            <configuration>
                                <failOnError>true</failOnError>
                                <quiet>true</quiet>
                                <tags>
                                    <!--
                                    Here we instruct plugin to use custom tag
                                    @link http://maven.apache.org/plugins/maven-javadoc-plugin/examples/tag-configuration.html
                                    -->
                                    <tag>
                                        <name>todo</name>
                                        <placement>a</placement>
                                        <head>To do:</head>
                                    </tag>
                                </tags>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>com.rqdql</groupId>
                                    <artifactId>rqdql-tk</artifactId>
                                    <version>2.0-SNAPSHOT</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                        <plugin>
                            <!--
                            Validate the quality of documentation
                            @link http://maven.apache.org/plugins/maven-docck-plugin
                            -->
                            <artifactId>maven-docck-plugin</artifactId>
                            <version>1.0</version> <!-- 30 Dec 2010 -->
                        </plugin>
                        <plugin>
                            <!--
                            Coding styling validator. Configuration is inside resources/checkstyle
                            directory. When you edit that file don't forget to install
                            the build-tool project first, and then run this project.
                            -->
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>2.6</version> <!-- 14 October 2010 -->
                            <configuration>
                                <failOnViolation>true</failOnViolation>
                                <failsOnError>true</failsOnError>
                                <consoleOutput>true</consoleOutput>
                                <logViolationsToConsole>true</logViolationsToConsole>
                                <violationSeverity>info</violationSeverity>
                                <configLocation>checkstyle/checks.xml</configLocation>
                                <headerLocation>checkstyle/LICENSE.txt</headerLocation>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>com.rqdql</groupId>
                                    <artifactId>rqdql-tk</artifactId>
                                    <version>2.0-SNAPSHOT</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                        <plugin>
                            <!--
                            Project Mess Detector, finds coding errors and reports them. In
                            CI environment it should stop the build if some errors are
                            found.
                            -->
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>2.5</version> <!-- 2 Nov 2010 -->
                            <configuration>
                                <failOnViolation>true</failOnViolation>
                                <targetJdk>${jdk.version}</targetJdk>
                                <aggregate>false</aggregate>
                                <verbose>true</verbose>
                                <linkXRef>false</linkXRef>
                                <rulesets>
                                    <ruleset>pmd/ruleset.xml</ruleset>
                                </rulesets>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>com.rqdql</groupId>
                                    <artifactId>rqdql-tk</artifactId>
                                    <version>2.0-SNAPSHOT</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                        <plugin>
                            <!--
                            Static code analysis to find potential bugs in code. One
                            major drawback in this plugin is that it DOES'T produce
                            any report to the output, only to XML files
                            -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>findbugs-maven-plugin</artifactId>
                            <version>2.3.2-SNAPSHOT</version> <!-- 6 Nov 2010 -->
                            <configuration>
                                <threshold>Exp</threshold> <!-- as much to show as possible -->
                                <!--
                                We never fail on error here, instead we let
                                our Groovy code to fail later, after parsing of
                                all errors
                                -->
                                <failOnError>false</failOnError>
                                <xmlOutput>true</xmlOutput>
                            </configuration>
                        </plugin>
                        <plugin>
                            <!--
                            This is a code coverage validator, executed AFTER
                            all unit tests are passed. Cobertura starts all tests
                            again in order to calculate code coverage, and validates
                            that this coverage is in the allowed interval.
                            -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>2.4</version> <!-- 2 Nov 2010 -->
                            <configuration>
                                <!--
                                This option doesn't work with cobertura 2.4, but is
                                going to be implemented in 2.5
                                @link http://jira.codehaus.org/browse/MCOBERTURA-75
                                -->
                                <quiet>false</quiet>
                                <instrumentation>
                                    <excludes>
                                        <!-- auto-generated classes for i18n -->
                                        <exclude>com/rqdql/gettext/*</exclude>
                                        <!-- auto-generated classes for ANTLR3 -->
                                        <exclude>com/rqdql/impl/scanner/antlr/T*</exclude>
                                        <exclude>com/rqdql/impl/scanner/antlr/AbstractT*</exclude>
                                        <!-- CLI class, which is never instantiated -->
                                        <exclude>com/rqdql/cli/Main.class</exclude>
                                    </excludes>
                                </instrumentation>
                                <check>
                                    <haltOnFailure>true</haltOnFailure>
                                    <lineRate>60</lineRate>
                                    <branchRate>60</branchRate>
                                    <packageLineRate>70</packageLineRate>
                                    <packageBranchRate>70</packageBranchRate>
                                    <totalLineRate>80</totalLineRate>
                                    <totalBranchRate>80</totalBranchRate>
                                </check>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <artifactId>maven-docck-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-documentation</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze-only</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>analyze-only</goal>
                                </goals>
                                <configuration>
                                    <ignoreNonCompile>true</ignoreNonCompile>
                                    <failOnWarning>true</failOnWarning>
                                </configuration>
                            </execution>
                            <execution>
                                <id>analyze-dep-mgt</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>analyze-dep-mgt</goal>
                                </goals>
                                <configuration>
                                    <failBuild>true</failBuild>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check-test-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <!-- the files are inside :ymock-tk module -->
                                    <configLocation>checkstyle/checks-test.xml</configLocation>
                                    <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <artifactId>maven-pmd-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>cpd-check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>findbugs</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <xml>${project.build.directory}/findbugsXml.xml</xml>
                                        <failOnError>true</failOnError>
                                    </properties>
                                    <!--
                                    @link http://docs.codehaus.org/display/GMAVEN/Executing+Groovy+Code
                                    @link http://groovy.codehaus.org./Reading+XML+using+Groovy%27s+XmlParser
                                    -->
                                    <source>
                                        <![CDATA[
                                        def file = new File(project.properties['xml'])
                                        if (!file.exists()) {
                                            log.info("No XML report, nothing to parse")
                                            return
                                        }
                                        def xml = new XmlParser().parse(file)
                                        def bugs = xml.BugInstance
                                        def total = bugs.size()
                                        if (total <= 0) {
                                            log.info("No errors/warnings found")
                                            return
                                        }
                                        log.info("Total bugs: " + total)
                                        for (i in 0..total-1) {
                                            def bug = bugs[i]
                                            log.info(
                                                bug.LongMessage.text()
                                                + " " + bug.Class.'@classname'
                                                + " " + bug.Class.SourceLine.Message.text()
                                            )
                                        }
                                        if (project.properties['failOnError']) {
                                            fail(total + " FindBugs error(s)")
                                        }
                                        ]]>
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- configuration is in pluginManagement section above -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
            This profile activates all site-related plugins. To activate
            this profile run: "mvn -Dsite"
            -->
            <id>live-site</id>
            <activation>
                <property><name>site</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-site-plugin</artifactId>
                        <!-- version is specified in build/plugins -->
                        <configuration>
                            <reportPlugins>
                                <plugin>
                                    <artifactId>maven-project-info-reports-plugin</artifactId>
                                    <!-- version is specified in plugins -->
                                    <reports>
                                        <report>cim</report>
                                        <report>dependencies</report>
                                        <report>issue-tracking</report>
                                        <report>license</report>
                                        <report>mailing-list</report>
                                        <report>plugins</report>
                                        <report>project-team</report>
                                        <report>scm</report>
                                        <report>summary</report>
                                    </reports>
                                </plugin>
                                <plugin>
                                    <groupId>org.codehaus.mojo</groupId>
                                    <artifactId>taglist-maven-plugin</artifactId>
                                    <version>2.4</version> <!-- 15 Nov 2010 -->
                                    <configuration>
                                        <tagListOptions>
                                            <tagClasses>
                                                <tagClass>
                                                    <displayName>ToDo</displayName>
                                                    <tags>
                                                        <tag>
                                                            <matchString>@todo</matchString>
                                                            <matchType>exact</matchType>
                                                        </tag>
                                                    </tags>
                                                </tagClass>
                                            </tagClasses>
                                        </tagListOptions>
                                    </configuration>
                                </plugin>
                                <plugin>
                                    <artifactId>maven-javadoc-plugin</artifactId>
                                    <!-- version is specified in build/plugins -->
                                    <configuration>
                                        <stylesheetfile>src/test/maven/javadoc/screen.css</stylesheetfile>
                                        <tags>
                                            <tag>
                                                <name>todo</name>
                                                <placement>a</placement>
                                                <head>To do:</head>
                                            </tag>
                                        </tags>
                                        <reportSets>
                                            <reportSet>
                                                <id>html</id>
                                                <reports>
                                                    <report>javadoc</report>
                                                </reports>
                                            </reportSet>
                                        </reportSets>
                                        <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                                        <docletArtifact>
                                            <groupId>org.umlgraph</groupId>
                                            <artifactId>doclet</artifactId>
                                            <version>5.1</version>
                                        </docletArtifact>
                                        <additionalparam>
                                            -views
                                            -all
                                        </additionalparam>
                                        <useStandardDocletOptions>true</useStandardDocletOptions>
                                    </configuration>
                                </plugin>
                                <plugin>
                                    <groupId>org.codehaus.mojo</groupId>
                                    <artifactId>cobertura-maven-plugin</artifactId>
                                    <!-- version is specified in build/plugins -->
                                </plugin>
                                <plugin>
                                    <groupId>org.codehaus.mojo</groupId>
                                    <artifactId>jdepend-maven-plugin</artifactId>
                                    <version>2.0-beta-2</version> <!-- 7 Nov 2010 -->
                                </plugin>
                            </reportPlugins>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                        Process LaTeX documentation in order to produce PDF
                        @see http://mojo.codehaus.org/latex-maven-plugin
                        -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>latex-maven-plugin</artifactId>
                        <version>1.0</version> <!-- 24 Dec 2010 -->
                        <configuration>
                            <buildDir>${project.build.directory}/site/pdf</buildDir>
                        </configuration>
                        <executions>
                            <execution>
                                <id>latex-documents</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>latex</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <!--
            To enable filtering of resources
            @link http://maven.apache.org/guides/getting-started/index.html#How_do_I_filter_resource_files
            -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <extensions>
            <!--
            To enable site deployment by FTP
            @link http://maven.apache.org/wagon/wagon-providers/wagon-ftp/
            -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>1.0-beta-7</version> <!-- 18 Dec 2010 -->
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.1</version> <!-- 6 Feb 2011 -->
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.2</version> <!-- 7 Nov 2010 -->
                    <configuration>
                        <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                        <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.1</version> <!-- 2 Dec 2010 -->
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <SCM-Revision>${buildNumber}</SCM-Revision>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                </plugin>
                <plugin>
                    <!--
                    Starts unit tests, protocols their results and creates
                    a summary report. It is required to send testing protocol
                    to the STDOUT as well, not only to the file.
                    -->
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.5</version> <!-- 1 Oct 2010 -->
                    <configuration>
                        <useFile>false</useFile>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version> <!-- 27 Oct 2010 -->
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <optimize>true</optimize>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    This plugin helps to manage releases and new versions
                    of the product.
                    @link http://maven.apache.org/plugins/maven-release-plugin/usage.html
                    -->
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                        <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>1.0-beta-3-SNAPSHOT</version>
                    <configuration>
                        <validationSets>
                            <validationSet>
                                <dir>src/main/resources</dir>
                                <validating>true</validating>
                                <includes>
                                    <include>.xml</include>
                                </includes>
                            </validationSet>
                        </validationSets>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.0-beta-3</version> <!-- 28 Dec 2010 -->
                    <configuration>
                        <reportPlugins>
                        </reportPlugins>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    To GPG-sign the artifact before deployment to foreign
                    repository. GPG keys have to be provided in CI
                    environment, and published beforehand.
                    @link http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/
                    -->
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.1</version> <!-- 21 Dec 2010 -->
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!--
                    To enable on-fly script executions.
                    @link http://docs.codehaus.org/display/GMAVEN/Executing+Groovy+Code
                    -->
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>1.3</version> <!-- 23 Nov 2010 -->
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
